{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/Container/Container.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Container/Container.jsx","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/services/pixabay-api.js","components/App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Container","children","className","s","container","Searchbar","state","query","handleQueryChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","event","preventDefault","onSubmit","props","this","SearchForm","SearchFormButton","type","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","onChange","placeholder","Component","ImageGalleryItem","src","largeImageURL","alt","onOpenModal","data-source","width","onClick","ImageGalleryItemImage","ImageGallery","images","map","id","webformatURL","tags","Button","onLoadMore","Loader","color","height","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","Overlay","ModalImage","API_KEY","BASE_URL","page","a","fetch","response","json","api","fetchImages","App","isLoading","showModal","totalImages","handleFormSubmit","getImages","toggleLoader","imagesAPI","then","hits","total","scrollTo","toast","success","length","dark","finally","handleChangePage","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","onCloseModal","source","dataset","prevProps","prevState","position","autoClose","transition","Zoom","hideProgressBar","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.241a4b56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2AxMb\",\"Modal\":\"Modal_Modal__2WBTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2qoWa\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3K8Z3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__17sQZ\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  handleQueryChange = e => {\n    this.setState({ query: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { query } = this.state;\n    const { onSubmit } = this.props;\n\n    onSubmit(query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n          <button className={s.SearchFormButton} type=\"submit\">\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            value={query}\n            onChange={this.handleQueryChange}\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nfunction ImageGalleryItem({ src, largeImageURL, alt, onOpenModal }) {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        src={src}\n        data-source={largeImageURL}\n        alt={alt}\n        width=\"200\"\n        onClick={onOpenModal}\n        className={s.ImageGalleryItemImage}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nfunction ImageGallery({ images, onOpenModal }) {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          src={webformatURL}\n          largeImageURL={largeImageURL}\n          onOpenModal={onOpenModal}\n          alt={tags}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n    }),\n  ),\n  onOpenModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nfunction Button({ onLoadMore }) {\n  return (\n    <button type=\"button\" onClick={onLoadMore} className={s.Button}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import LoaderSpinner from 'react-loader-spinner';\nimport s from './Loader.module.css';\n\nfunction Loader() {\n  return (\n    <div className={s.Loader}>\n      <LoaderSpinner type=\"Audio\" color=\"#3f51b5\" height={80} width={80} />\n    </div>\n  );\n}\n\nexport default Loader;\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { largeImageURL, alt } = this.props;\n\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\n        <div className={s.Modal}>\n          <img className={s.ModalImage} src={largeImageURL} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  largeImageURL: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","const API_KEY = '19086013-8913d7edb8f4a3e99ae0d2d02';\nconst BASE_URL = 'https://pixabay.com/api';\n\nasync function fetchImages(query, page) {\n  const response = await fetch(\n    `${BASE_URL}/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n  return await response.json();\n}\n\nconst api = {\n  fetchImages,\n};\n\nexport default api;\n","import { Component } from 'react';\nimport Container from './Container/Container';\nimport Searchbar from './Searchbar/Searchbar';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Button from './Button/Button';\nimport Loader from './Loader/Loader';\nimport Modal from './Modal/Modal';\nimport imagesAPI from './services/pixabay-api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  state = {\n    query: '',\n    images: [],\n    page: 1,\n    largeImageURL: '',\n    alt: '',\n    isLoading: false,\n    showModal: false,\n    totalImages: 0,\n  };\n\n  handleFormSubmit = query => {\n    this.setState({\n      query,\n      images: [],\n      page: 1,\n      totalImages: 0,\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.query;\n    const nextQuery = this.state.query;\n\n    if (prevQuery !== nextQuery) {\n      this.getImages();\n    }\n  }\n\n  getImages = () => {\n    const { query, page } = this.state;\n\n    this.toggleLoader();\n\n    return imagesAPI\n      .fetchImages(query, page)\n      .then(({ hits, total }) => {\n        // if (query === '') {\n        //   toast.warning('Enter valid query.');\n        //   return;\n        // }\n        this.scrollTo();\n\n        if (total === 0) {\n          toast.dark('Nothing was found. Enter another query.');\n          return;\n        }\n\n        if (page === 1) {\n          toast.success(`${total} images was found.`);\n        }\n\n        this.setState(({ images }) => ({\n          images: [...images, ...hits],\n          totalImages: total - images.length,\n        }));\n      })\n      .finally(() => {\n        this.toggleLoader();\n      });\n  };\n\n  handleChangePage = () => {\n    this.setState(({ page }) => ({ page: page + 1 }), this.getImages);\n  };\n\n  toggleLoader = () => {\n    this.setState(({ isLoading }) => ({\n      isLoading: !isLoading,\n    }));\n  };\n\n  onLoadMore = () => {\n    this.handleChangePage();\n\n    // setTimeout(() => {\n    //   this.getImages();\n    // }, 400);\n  };\n\n  scrollTo = () => {\n    setTimeout(() => {\n      window.scrollBy({\n        top: document.documentElement.clientHeight - 150,\n        behavior: 'smooth',\n      });\n    }, 1000);\n  };\n\n  onCloseModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  onOpenModal = e => {\n    const { source } = e.target.dataset;\n    const { alt } = e.target;\n\n    this.setState({\n      largeImageURL: source,\n      alt: alt,\n    });\n\n    this.onCloseModal();\n  };\n\n  render() {\n    const {\n      images,\n      largeImageURL,\n      alt,\n      isLoading,\n      showModal,\n      totalImages,\n    } = this.state;\n\n    return (\n      <Container>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery images={images} onOpenModal={this.onOpenModal} />\n        {isLoading && <Loader />}\n        {totalImages > 11 && <Button onLoadMore={this.onLoadMore} />}\n        {showModal && (\n          <Modal\n            largeImageURL={largeImageURL}\n            alt={alt}\n            onClose={this.onCloseModal}\n          />\n        )}\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={2000}\n          transition={Zoom}\n          hideProgressBar\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__DjWH3\",\"SearchForm\":\"Searchbar_SearchForm__1ac2l\",\"SearchFormButton\":\"Searchbar_SearchFormButton__21S85\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__8f9cn\",\"SearchFormInput\":\"Searchbar_SearchFormInput__VhsfU\"};"],"sourceRoot":""}